name: Build and deploy Node.js app to Azure Web App - my-todo-app-pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install client dependencies and build client
        run: |
          cd client
          npm install
          npm run build
          cd ..

      - name: Move client build to server/src/dist
        run: |
          mkdir -p server/src/dist
          cp -a client/dist/. server/src/dist

      - name: Install server dependencies
        run: |
          cd server
          npm install
          cd ..

      - name: Zip server for deployment
        run: |
          cd server
          zip -r ../server.zip .
          cd ..

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: server.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip server.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'my-todo-app-pipeline'
          package: server.zip

      - name: Set environment variables in Azure App Service
        run: |
          az webapp config appsettings set --resource-group DefaultResourceGroup-EUS --name my-todo-app-pipeline --settings MONGO_URI=${{ secrets.MONGO_URI }} PASSWORD=${{ secrets.PASSWORD }} SECRET=${{ secrets.SECRET }} PORT=8080
